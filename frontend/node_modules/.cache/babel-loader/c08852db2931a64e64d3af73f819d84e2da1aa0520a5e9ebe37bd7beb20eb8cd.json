{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaan\\\\Desktop\\\\root\\\\frontend\\\\src\\\\components\\\\EverythingView\\\\EverythingView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './EverythingView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EverythingView = () => {\n  _s();\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false); // Menünün açık olup olmadığını kontrol eden state\n  const dropdownRef = useRef(null); // Menüyü referans alıyoruz\n\n  // Menüyü açma/kapatma fonksiyonu\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen); // Açık değilse aç, açıksa kapa\n  };\n\n  // Boş bir yere tıklandığında menüyü kapatma işlevi\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false); // Menünün dışına tıklanırsa menüyü kapat\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"everything-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Everything\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"task-options-btn\",\n      onClick: toggleDropdown,\n      children: \"Task Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Copy link to view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add to favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Customize view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pin view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Private view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(EverythingView, \"S77lRhj6VuvY2XBx2nzaBdGbiSk=\");\n_c = EverythingView;\nexport default EverythingView;\nvar _c;\n$RefreshReg$(_c, \"EverythingView\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","EverythingView","_s","isDropdownOpen","setIsDropdownOpen","dropdownRef","toggleDropdown","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","_c","$RefreshReg$"],"sources":["C:/Users/Kaan/Desktop/root/frontend/src/components/EverythingView/EverythingView.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './EverythingView.css';\r\n\r\nconst EverythingView = () => {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false); // Menünün açık olup olmadığını kontrol eden state\r\n  const dropdownRef = useRef(null); // Menüyü referans alıyoruz\r\n\r\n  // Menüyü açma/kapatma fonksiyonu\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen(!isDropdownOpen); // Açık değilse aç, açıksa kapa\r\n  };\r\n\r\n  // Boş bir yere tıklandığında menüyü kapatma işlevi\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsDropdownOpen(false); // Menünün dışına tıklanırsa menüyü kapat\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"everything-container\">\r\n      <h1>Everything</h1>\r\n\r\n      {/* Task Options butonu */}\r\n      <button className=\"task-options-btn\" onClick={toggleDropdown}>\r\n        Task Options\r\n      </button>\r\n\r\n      {/* Dropdown menü */}\r\n      {isDropdownOpen && (\r\n        <div className=\"dropdown-menu\" ref={dropdownRef}>\r\n          <button>Rename</button>\r\n          <button>Copy link to view</button>\r\n          <button>Add to favorites</button>\r\n          <button>Customize view</button>\r\n          <button>Pin view</button>\r\n          <button>Private view</button>\r\n        </div>\r\n      )}\r\n\r\n      <p>No tasks available.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EverythingView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}