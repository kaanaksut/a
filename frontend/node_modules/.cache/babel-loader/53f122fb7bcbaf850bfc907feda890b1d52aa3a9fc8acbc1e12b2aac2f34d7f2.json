{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaan\\\\Desktop\\\\root\\\\frontend\\\\src\\\\components\\\\EverythingView\\\\EverythingView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './EverythingView.css';\nimport EverythingToolbar from './EverythingToolbar';\nimport TaskList from './TaskList';\nimport CreateTaskModal from '../Modal/CreateTaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EverythingView = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [viewMode, setViewMode] = useState('list'); // Arayüz için mod (list, board, calendar)\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal açma-kapama kontrolü\n\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n\n  // Görevleri API'den çekme\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        if (!userInfo || !userInfo.token) {\n          console.error('No valid user info or token found in localStorage');\n          return;\n        }\n        const config = {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`\n          }\n        };\n        const {\n          data\n        } = await axios.get('/api/tasks', config);\n        if (!data) {\n          throw new Error('API returned undefined data');\n        }\n        setTasks(data);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error fetching tasks:', error.message || ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Unknown error');\n      }\n    };\n    fetchTasks();\n  }, [userInfo]);\n\n  // Yeni görev eklendiğinde state'i güncelle\n  const handleCreateTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n\n  // Filtreleme işlemi\n  const filteredTasks = tasks.filter(task => task.title.toLowerCase().includes(filter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"everything-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"everything-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Everything\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EverythingToolbar, {\n        setViewMode: setViewMode,\n        setFilter: setFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-task-btn\",\n      onClick: () => setIsModalOpen(true),\n      children: \"+ Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks,\n      viewMode: viewMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(CreateTaskModal, {\n      onClose: () => setIsModalOpen(false),\n      onCreate: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(EverythingView, \"4PaxOmf7YUAe5KCQEqZOS6uuVfI=\");\n_c = EverythingView;\nexport default EverythingView;\nvar _c;\n$RefreshReg$(_c, \"EverythingView\");","map":{"version":3,"names":["React","useState","useEffect","axios","EverythingToolbar","TaskList","CreateTaskModal","jsxDEV","_jsxDEV","EverythingView","_s","tasks","setTasks","filter","setFilter","viewMode","setViewMode","isModalOpen","setIsModalOpen","userInfo","JSON","parse","localStorage","getItem","fetchTasks","token","console","error","config","headers","Authorization","data","get","Error","_error$response","_error$response$data","message","response","handleCreateTask","newTask","filteredTasks","task","title","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","onCreate","_c","$RefreshReg$"],"sources":["C:/Users/Kaan/Desktop/root/frontend/src/components/EverythingView/EverythingView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './EverythingView.css';\r\nimport EverythingToolbar from './EverythingToolbar';\r\nimport TaskList from './TaskList';\r\nimport CreateTaskModal from '../Modal/CreateTaskModal';\r\n\r\nconst EverythingView = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n  const [viewMode, setViewMode] = useState('list'); // Arayüz için mod (list, board, calendar)\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal açma-kapama kontrolü\r\n\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n\r\n  // Görevleri API'den çekme\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        if (!userInfo || !userInfo.token) {\r\n          console.error('No valid user info or token found in localStorage');\r\n          return; \r\n        }\r\n\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get('/api/tasks', config);\r\n\r\n        if (!data) {\r\n          throw new Error('API returned undefined data');\r\n        }\r\n\r\n        setTasks(data);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error.message || error.response?.data?.message || 'Unknown error');\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [userInfo]);\r\n\r\n  // Yeni görev eklendiğinde state'i güncelle\r\n  const handleCreateTask = (newTask) => {\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  // Filtreleme işlemi\r\n  const filteredTasks = tasks.filter((task) =>\r\n    task.title.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"everything-container\">\r\n      {/* Toolbar kısmı */}\r\n      <div className=\"everything-header\">\r\n        <h1>Everything</h1>\r\n        <EverythingToolbar setViewMode={setViewMode} setFilter={setFilter} />\r\n      </div>\r\n\r\n      {/* Görev ekleme butonu */}\r\n      <button className=\"add-task-btn\" onClick={() => setIsModalOpen(true)}>\r\n        + Add Task\r\n      </button>\r\n\r\n      {/* Görev Listesi */}\r\n      <TaskList tasks={filteredTasks} viewMode={viewMode} />\r\n\r\n      {/* Görev oluşturma modalı */}\r\n      {isModalOpen && (\r\n        <CreateTaskModal onClose={() => setIsModalOpen(false)} onCreate={handleCreateTask} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EverythingView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}