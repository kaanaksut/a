{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaan\\\\Desktop\\\\root\\\\frontend\\\\src\\\\components\\\\EverythingView\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  toggleDropdown: externalToggle,\n  isDropdownOpen: externalDropdownOpen,\n  dropdownRef: externalDropdownRef\n}) => {\n  _s();\n  const internalDropdownRef = useRef(null); // Her zaman useRef kullanarak bir referans oluştur\n  const dropdownRef = externalDropdownRef || internalDropdownRef; // Eğer dışarıdan bir referans geldiyse onu kullan, yoksa içeridekini kullan\n\n  const [isDropdownOpen, setIsDropdownOpen] = useState(externalDropdownOpen || false); // Menü açma/kapatma durumu\n\n  // Dropdown menüyü açma/kapatma\n  const toggleDropdown = e => {\n    e.stopPropagation();\n    if (externalToggle) {\n      externalToggle(e); // Eğer dışarıdan bir toggle fonksiyonu geldiyse onu kullan\n    } else {\n      setIsDropdownOpen(!isDropdownOpen); // Yoksa bu bileşende yönet\n    }\n  };\n\n  // Boş bir alana tıklandığında menüyü kapatma\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        if (externalToggle) {\n          externalToggle(false); // Dışarıdan gelen toggle fonksiyonu varsa onu kullanarak menüyü kapat\n        } else {\n          setIsDropdownOpen(false); // Yoksa yerel state üzerinden menüyü kapat\n        }\n      }\n    };\n    window.addEventListener('click', handleClickOutside);\n    return () => {\n      window.removeEventListener('click', handleClickOutside);\n    };\n  }, [dropdownRef, externalToggle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"list-options-btn\",\n      onClick: toggleDropdown,\n      children: \"List Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), (externalDropdownOpen !== undefined ? externalDropdownOpen : isDropdownOpen) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Copy link to view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add to favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Customize view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pin view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Private view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"L9JOphF3KjOdEAtl3+je/1YzYXM=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","TaskList","toggleDropdown","externalToggle","isDropdownOpen","externalDropdownOpen","dropdownRef","externalDropdownRef","_s","internalDropdownRef","setIsDropdownOpen","e","stopPropagation","handleClickOutside","event","current","contains","target","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","undefined","ref","_c","$RefreshReg$"],"sources":["C:/Users/Kaan/Desktop/root/frontend/src/components/EverythingView/TaskList.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './TaskList.css';\r\n\r\nconst TaskList = ({ toggleDropdown: externalToggle, isDropdownOpen: externalDropdownOpen, dropdownRef: externalDropdownRef }) => {\r\n  const internalDropdownRef = useRef(null); // Her zaman useRef kullanarak bir referans oluştur\r\n  const dropdownRef = externalDropdownRef || internalDropdownRef; // Eğer dışarıdan bir referans geldiyse onu kullan, yoksa içeridekini kullan\r\n\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(externalDropdownOpen || false); // Menü açma/kapatma durumu\r\n\r\n  // Dropdown menüyü açma/kapatma\r\n  const toggleDropdown = (e) => {\r\n    e.stopPropagation();\r\n    if (externalToggle) {\r\n      externalToggle(e); // Eğer dışarıdan bir toggle fonksiyonu geldiyse onu kullan\r\n    } else {\r\n      setIsDropdownOpen(!isDropdownOpen); // Yoksa bu bileşende yönet\r\n    }\r\n  };\r\n\r\n  // Boş bir alana tıklandığında menüyü kapatma\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        if (externalToggle) {\r\n          externalToggle(false); // Dışarıdan gelen toggle fonksiyonu varsa onu kullanarak menüyü kapat\r\n        } else {\r\n          setIsDropdownOpen(false); // Yoksa yerel state üzerinden menüyü kapat\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('click', handleClickOutside);\r\n\r\n    return () => {\r\n      window.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, [dropdownRef, externalToggle]);\r\n\r\n  return (\r\n    <div className=\"task-list-container\">\r\n      <h2>Task List</h2>\r\n      \r\n      {/* List Options butonu */}\r\n      <button className=\"list-options-btn\" onClick={toggleDropdown}>\r\n        List Options\r\n      </button>\r\n\r\n      {/* List Options menüsü */}\r\n      {(externalDropdownOpen !== undefined ? externalDropdownOpen : isDropdownOpen) && (\r\n        <div className=\"dropdown-menu\" ref={dropdownRef}>\r\n          <button>Rename</button>\r\n          <button>Copy link to view</button>\r\n          <button>Add to favorites</button>\r\n          <button>Customize view</button>\r\n          <button>Pin view</button>\r\n          <button>Private view</button>\r\n        </div>\r\n      )}\r\n\r\n      <p>No tasks available.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,cAAc,EAAEC,cAAc;EAAEC,cAAc,EAAEC,oBAAoB;EAAEC,WAAW,EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EAC/H,MAAMC,mBAAmB,GAAGZ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAMS,WAAW,GAAGC,mBAAmB,IAAIE,mBAAmB,CAAC,CAAC;;EAEhE,MAAM,CAACL,cAAc,EAAEM,iBAAiB,CAAC,GAAGd,QAAQ,CAACS,oBAAoB,IAAI,KAAK,CAAC,CAAC,CAAC;;EAErF;EACA,MAAMH,cAAc,GAAIS,CAAC,IAAK;IAC5BA,CAAC,CAACC,eAAe,CAAC,CAAC;IACnB,IAAIT,cAAc,EAAE;MAClBA,cAAc,CAACQ,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLD,iBAAiB,CAAC,CAACN,cAAc,CAAC,CAAC,CAAC;IACtC;EACF,CAAC;;EAED;EACAN,SAAS,CAAC,MAAM;IACd,MAAMe,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAIR,WAAW,CAACS,OAAO,IAAI,CAACT,WAAW,CAACS,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACtE,IAAId,cAAc,EAAE;UAClBA,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QACzB,CAAC,MAAM;UACLO,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5B;MACF;IACF,CAAC;IAEDQ,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEN,kBAAkB,CAAC;IAEpD,OAAO,MAAM;MACXK,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEP,kBAAkB,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,CAACP,WAAW,EAAEH,cAAc,CAAC,CAAC;EAEjC,oBACEH,OAAA;IAAKqB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCtB,OAAA;MAAAsB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGlB1B,OAAA;MAAQqB,SAAS,EAAC,kBAAkB;MAACM,OAAO,EAAEzB,cAAe;MAAAoB,QAAA,EAAC;IAE9D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGR,CAACrB,oBAAoB,KAAKuB,SAAS,GAAGvB,oBAAoB,GAAGD,cAAc,kBAC1EJ,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAACQ,GAAG,EAAEvB,WAAY;MAAAgB,QAAA,gBAC9CtB,OAAA;QAAAsB,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvB1B,OAAA;QAAAsB,QAAA,EAAQ;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClC1B,OAAA;QAAAsB,QAAA,EAAQ;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjC1B,OAAA;QAAAsB,QAAA,EAAQ;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/B1B,OAAA;QAAAsB,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzB1B,OAAA;QAAAsB,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACN,eAED1B,OAAA;MAAAsB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAAClB,EAAA,CA3DIP,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}